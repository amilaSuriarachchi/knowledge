<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
  <sys_ws_operation action="INSERT_OR_UPDATE">
    <active>true</active>
    <consumes>application/json,application/xml,text/xml</consumes>
    <consumes_customized>false</consumes_customized>
    <default_operation_uri/>
    <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
    <http_method>GET</http_method>
    <name>Optimized</name>
    <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	// record the start of execution time
	var time = new Date();
    var startTime = time.getTime();
	
	// create an asynchronous import set to use with these records
	// this avoids the business rules and hence synchrous transform
    var importSet = new GlideRecord('sys_import_set');
    importSet.name = 'Sales Import Set';
    importSet.short_description = 'Import set from sales rest api';
    importSet.table_name = 'sales_import_set';
    importSet.creation_source = 'ws_insert_multiple';
    var importSetID = importSet.insert();

    for (var i=0; i<500; i++){
        var salesImport = new GlideRecord('sales_import_set');
        salesImport.u_region = 'Middle East and North Africa';
        salesImport.u_country = 'Azerbaijan';
        salesImport.u_item_type = 'Snacks';
        salesImport.u_sales_channel = 'Online';
        salesImport.u_order_priority = 'C';
        salesImport.u_order_date = '10/8/2014';
        salesImport.u_order_id = '535113847';
        salesImport.u_ship_date = '10/23/2014';
        salesImport.u_units_sold = '934';
        salesImport.u_unit_price = '152.58';
        salesImport.u_unit_cost = '97.44';
        salesImport.u_total_revenue = '142509.72';
        salesImport.u_total_cost = '91008.96';
        salesImport.u_total_profit = '51500.76';
        salesImport.sys_import_set = importSetID;
        salesImport.sys_import_row = i;
        salesImport.insert();
    }

    // after loading records set the import set as loaded
    importSet.state = 'loaded';
    importSet.update();

     // now run the transform as a batch
     var importSetRun = new GlideImportSetRun(importSetID);
     var importLog = new GlideImportLog(importSetRun, 'Batch Rest API');

     var transformer = new GlideImportSetTransformer();
     transformer.setLogger(importLog);
     transformer.setImportSetRun(importSetRun);
     transformer.setImportSetID(importSetID);
     transformer.transformAllMaps(importSet);
	
	 var time = new Date();
     return 'Execution time : ' + (time.getTime() - startTime);


})(request, response);]]></operation_script>
    <operation_uri>/api/now/sales_batch_api/optimized</operation_uri>
    <produces>application/json,application/xml,text/xml</produces>
    <produces_customized>false</produces_customized>
    <relative_path>/optimized</relative_path>
    <request_example/>
    <requires_acl_authorization>true</requires_acl_authorization>
    <requires_authentication>true</requires_authentication>
    <requires_snc_internal_role>true</requires_snc_internal_role>
    <short_description/>
    <sys_class_name>sys_ws_operation</sys_class_name>
    <sys_created_by>admin</sys_created_by>
    <sys_created_on>2019-03-01 06:00:25</sys_created_on>
    <sys_id>d33cf4af9f3323005cf3ffa4677fcf47</sys_id>
    <sys_mod_count>3</sys_mod_count>
    <sys_name>Optimized</sys_name>
    <sys_package display_value="Global" source="global">global</sys_package>
    <sys_policy/>
    <sys_scope display_value="Global">global</sys_scope>
    <sys_update_name>sys_ws_operation_d33cf4af9f3323005cf3ffa4677fcf47</sys_update_name>
    <sys_updated_by>admin</sys_updated_by>
    <sys_updated_on>2019-03-01 07:07:43</sys_updated_on>
    <web_service_definition display_value="Sales Batch API">324638eb9f3323005cf3ffa4677fcf6b</web_service_definition>
    <web_service_version/>
  </sys_ws_operation>
</record_update>
